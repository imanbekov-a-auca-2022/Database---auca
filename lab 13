C:\Program Files\PostgreSQL\17\pgAdmin 4\runtime>"C:\Program Files\PostgreSQL\17\pgAdmin 4\runtime\psql.e
xe" "host=localhost port=5432 dbname=postgres user=postgres sslmode=prefer connect_timeout=10" 2>>&1
psql (17.6)
WARNING: Console code page (866) differs from Windows code page (1251)
         8-bit characters might not work correctly. See psql reference
         page "Notes for Windows users" for details.
Type "help" for help.

mydb=# SELECT first_name, last_name, salary
mydb-# FROM employees
mydb-# WHERE salary > (
mydb(#     SELECT AVG(salary) FROM employees
mydb(# );
 first_name | last_name | salary
-------------+------------+---------
 Bob         | Jones      | 70000.00
 Diana       | Miller     | 90000.00
(2 rows)

mydb=# WITH regional_sales AS (
mydb(#     SELECT region_id, SUM(amount) AS total_sales
mydb(#     FROM orders
mydb(#     GROUP BY region_id
mydb(# )
mydb-# SELECT region_id, total_sales
mydb-# FROM regional_sales
mydb-# WHERE total_sales > 1000000;
 region_id | total_sales
------------+-------------
          1 | 1620000.00
(1 row)

mydb=# WITH RECURSIVE org_chart AS (
mydb(#     SELECT employee_id, first_name, last_name, manager_id
mydb(#     FROM employees
mydb(#     WHERE manager_id IS NULL
mydb(#     UNION ALL
mydb(#     SELECT e.employee_id, e.first_name, e.last_name, e.manager_id
mydb(#     FROM employees e
mydb(#     INNER JOIN org_chart oc ON e.manager_id = oc.employee_id
mydb(# )
mydb-# SELECT * FROM org_chart;
 employee_id | first_name | last_name | manager_id
--------------+------------+-----------+------------
            1 | Alice      | Smith     | 
            4 | Diana      | Miller    | 
            2 | Bob        | Jones     | 1
            3 | Charlie    | Brown     | 1
            5 | Ethan      | Wilson    | 4
(5 rows)

mydb=# SELECT product_name FROM warehouse_1
mydb-# UNION
mydb-# SELECT product_name FROM warehouse_2;
 product_name
---------------
 Laptop
 Mouse
 Monitor
 Keyboard
(4 rows)

mydb=# SELECT product_id FROM warehouse_1 WHERE quantity = 0
mydb-# INTERSECT
mydb-# SELECT product_id FROM warehouse_2 WHERE quantity = 0;
 product_id
-------------
(0 rows)

mydb=# SELECT
mydb-#     first_name,
mydb-#     last_name,
mydb-#     department,
mydb-#     salary,
mydb-#     RANK() OVER (PARTITION BY department ORDER BY salary DESC) AS dept_salary_rank
mydb-# FROM employees;
 first_name | last_name | department | salary  | dept_salary_rank
-------------+------------+-------------+---------+------------------
 Alice       | Smith      | HR          | 50000.00 |                1
 Bob         | Jones      | IT          | 70000.00 |                1
 Charlie     | Brown      | IT          | 60000.00 |                2
 Diana       | Miller     | Sales       | 90000.00 |                1
 Ethan       | Wilson     | Sales       | 55000.00 |                2
(5 rows)

mydb=# SELECT
mydb-#     product_name,
mydb-#     SUM(CASE WHEN year = 2022 THEN sales_amount ELSE 0 END) AS year_2022,
mydb-#     SUM(CASE WHEN year = 2023 THEN sales_amount ELSE 0 END) AS year_2023,
mydb-#     SUM(CASE WHEN year = 2024 THEN sales_amount ELSE 0 END) AS year_2024
mydb-# FROM sales
mydb-# GROUP BY product_name;
 product_name | year_2022 | year_2023 | year_2024
---------------+------------+------------+------------
 Laptop        | 10000.00   | 15000.00   | 18000.00
 Mouse         |  5000.00   |  8000.00   |  9000.00
(2 rows)

mydb=# SELECT product_name, '2022' AS year, year_2022 AS sales_amount FROM pivoted_sales
mydb-# UNION ALL
mydb-# SELECT product_name, '2023' AS year, year_2023 AS sales_amount FROM pivoted_sales
mydb-# UNION ALL
mydb-# SELECT product_name, '2024' AS year, year_2024 AS sales_amount FROM pivoted_sales
mydb-# ORDER BY product_name, year;
 product_name | year | sales_amount
---------------+------+--------------
 Laptop        | 2022 | 10000.00
 Laptop        | 2023 | 15000.00
 Laptop        | 2024 | 18000.00
 Mouse         | 2022 |  5000.00
 Mouse         | 2023 |  8000.00
 Mouse         | 2024 |  9000.00
(6 rows)

mydb=# SELECT
mydb-#     employee_id,
mydb-#     SUM(salary) OVER (PARTITION BY department) AS total_dept_salary,
mydb-#     AVG(salary) FILTER (WHERE tenure > 5) OVER () AS avg_salary_senior
mydb-# FROM employees;
 employee_id | total_dept_salary | avg_salary_senior
--------------+-------------------+-------------------
            1 |           50000.00 |          70000.00
            2 |          130000.00 |          70000.00
            3 |          130000.00 |          70000.00
            4 |          145000.00 |          70000.00
            5 |          145000.00 |          70000.00
(5 rows)

mydb=# SELECT product_name, status
mydb-# FROM orders
mydb-# ORDER BY
mydb(#     CASE status
mydb(#         WHEN 'High Priority' THEN 1
mydb(#         WHEN 'Medium Priority' THEN 2
mydb(#         WHEN 'Low Priority' THEN 3
mydb(#         ELSE 4
mydb(#     END;
 product_name |     status
---------------+----------------
 Laptop        | High Priority
 Mouse         | Medium Priority
 Monitor       | Low Priority
(3 rows)
